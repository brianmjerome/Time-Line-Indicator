{"name":"Time Line Indicator","tagline":"Plugin that adds a time indicator in the form of a line to Extensible's Calendar Pro to be shown on the Day/Week/Multi-Day Views.","body":"Time-Line-Indicator\r\n===================\r\n\r\nPlugin that adds a time indicator in the form of a line to Extensible's Calendar Pro to be shown on the Day/Week/Multi-Day Views.\r\n\r\nFirst Step:\r\n-----------\r\n\r\n**calendar/template/DateBody.js** -- add the following line before the *<table ...&gt;* in the superclass call:\r\n`\r\n'<hr id=\"' + this.id.substring(0, this.id.length-3) + '-hd-time-indicator\" class=\"time-indicator\" style=\"top:0px;visibility: hidden;\"></hr>',\r\n`\r\n\r\nSo it should look something like this:\r\n\r\n`\r\ncalendar.template.DayBody.superclass.constructor.call(this,\r\n            '<hr id=\"' + this.id.substring(0, this.id.length-3) + '-hd-time-indicator\" class=\"time-indicator\" style=\"top:0px;visibility: hidden;\"></hr>',\r\n            '<table class=\"ext-cal-bg-tbl\" cellspacing=\"0\" cellpadding=\"0\" style=\"height:{dayHeight}px;\">',\r\n`\r\n\r\nNext Step:\r\n----------\r\n\r\n**calendar/view/Month.js** -- add the following code into the initClock *run* function:\r\n\r\n            var formattedTime = Ext.Date.format(t, Calendar.Date.use24HourTime ? 'G:i' : 'g:ia');\r\n            var indicator = Ext.get(this.id + '-time-indicator');\r\n\r\n            if(el !== null && indicator !== null){\r\n            // move indicator based on time\r\n            var hourInterval = 42,\r\n                minuteInterval = hourInterval / 59,\r\n                fullTime = formattedTime,\r\n                length = fullTime.length,\r\n                am = fullTime.substring(length-2, length) === \"am\",\r\n                h_px = am ? 0 : hourInterval * 12,\r\n                m_px = 0;\r\n            \r\n            var hour = parseInt(fullTime.substring(0, length == 7 ? 2 : 1), 10),\r\n                min  = parseInt(fullTime.substring(length == 7 ? 3 : 2, length == 7 ? 5 : 4), 10);\r\n            \r\n            h_px = h_px + ((!am && hour == 12) ? 0 : (hourInterval * hour)),\r\n                m_px = m_px + (minuteInterval * min);\r\n            \r\n            if(indicator.dom.style.visibility === 'hidden'){\r\n                indicator.show();\r\n            }\r\n            indicator.setTop(h_px + m_px);\r\n            }\r\n            else if(indicator !== null){\r\n            indicator.hide();\r\n            }\r\n\r\n\r\nSo it should look like this:\r\n\r\n            initClock : function(){\r\n                if(Ext.fly(me.itemId + '-clock') !== null){\r\n                me.prevClockDay = new Date().getDay();\r\n                if(me.clockTask){\r\n                    Ext.util.TaskManager.stop(me.clockTask);\r\n                }\r\n                me.clockTask = Ext.util.TaskManager.start({\r\n                //gets called every second\r\n                run: function(){\r\n                    var el = Ext.fly(this.id + '-clock'),\r\n                    t = new Date();\r\n            \r\n                    var formattedTime = Ext.Date.format(t, Calendar.Date.use24HourTime ? 'G:i' : 'g:ia'),\r\n                        indicator = Ext.get(this.id + '-time-indicator');\r\n            \r\n                    if(el !== null && indicator !== null){\r\n                        // move indicator based on time\r\n                        var hourInterval = 42,\r\n                        minuteInterval = hourInterval / 59,\r\n                        fullTime = formattedTime,\r\n                        length = fullTime.length,\r\n                        am = fullTime.substring(length-2, length) === \"am\",\r\n                        h_px = am ? 0 : hourInterval * 12,\r\n                        m_px = 0;\r\n            \r\n                        var hour = parseInt(fullTime.substring(0, length == 7 ? 2 : 1), 10),\r\n                        min  = parseInt(fullTime.substring(length == 7 ? 3 : 2, length == 7 ? 5 : 4), 10);\r\n                        \r\n                        h_px = h_px + ((!am && hour == 12) ? 0 : (hourInterval * hour)),\r\n                        m_px = m_px + (minuteInterval * min);\r\n            \r\n                        if(indicator.dom.style.visibility === 'hidden'){\r\n                                    indicator.show();\r\n                        }\r\n                        indicator.setTop(h_px + m_px);\r\n                    }\r\n                    else if(indicator !== null){\r\n                        indicator.hide();\r\n                    }\r\n                        \r\n            if(t.getDay() == me.prevClockDay){\r\n                if(el){\r\n                    ...\r\n\r\n\r\n\r\nCSS\r\n---\r\nHere is the css for the time-indcator:\r\n\r\n`\r\n.time-indicator {\r\n    position: relative;\r\n    border: none;\r\n    border-top: 1px solid red;\r\n    border-bottom: 1px solid red;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    z-index: 1;\r\n}\r\n`\r\n\r\nIn the end you should end up something like this:\r\n<a href=\"http://imgur.com/fbR6IG3\"><img src=\"http://i.imgur.com/fbR6IG3.png?1\" title=\"Hosted by imgur.com\" /></a>\r\n\r\nOptional\r\n--------\r\nIf one wants, the event css class can be changed to have a z-index higher than the z-index in the time-indicator class:\r\n\r\n`\r\n.ext-cal-day-col .ext-cal-evr,\r\n.ext-cal-day-col .ext-cal-evi {\r\n    white-space: normal;\r\n    border-right: 1px solid #fff;\r\n    z-index: 2;  //time-indicator has z-index: 1;\r\n}\r\n`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}